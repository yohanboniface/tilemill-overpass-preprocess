#!/usr/bin/env node
var fs = require('fs'),
    path = require('path'),
    http = require('http'),
    osmtogeojson = require('osmtogeojson'),
    baseURL = 'http://overpass-api.de/api/interpreter?data=[out:json];';

function help () {
    console.log('tilemill_overpass_preprocess <project-name>');
}

/**
 * Run from command line
 */

function processLayer (layer, force) {
    var output = '';
    if (layer.Datasource && layer.Datasource.layer === 'OGRGeoJSON' && layer.Datasource.table) {
        if(fs.existsSync(layer.Datasource.file) && !force) {
            console.log('File already exists and not foce mode', layer.Datasource.file, 'Skipping');
            return;
        }
        console.log('Processing file', layer.Datasource.file);
        http.get(baseURL + encodeURIComponent(layer.Datasource.table), function(res) {
            if (res.statusCode !== 200) {
                console.log('Bad response', res.statusCode);
            }
            res.setEncoding('utf8');
            res.on('data', function (data) {
                output += data;
            });
            res.on('end', function () {
                output = JSON.parse(output);
                output = osmtogeojson(output, {flatProperties: true});
                output = JSON.stringify(output);
                fs.writeFileSync(layer.Datasource.file, output);
                console.log('Done', layer.Datasource.file);
            });
      }).on('error', function(e) {
            console.log('Got error: ' + e.message);
        });

    }
}

function run () {
    var args = process.argv.slice(2),
        mml, mml_path, force;
    if (args.length === 1 || args.length === 2) { // project mode
        var tilemill_config = JSON.parse(fs.readFileSync(path.join(process.env.HOME, '.tilemill/config.json'), 'utf8')),
            tilemill_dir = tilemill_config.files || path.join(process.env.HOME, 'Documents/MapBox'),
            project_name = args[0],
            project_path = path.join(tilemill_dir, 'project', project_name);
        if (!fs.existsSync(project_path)) {
            console.log('[tilemill_overpass_preprocess] project dir not found at ' + project_path);
            process.exit(1);
        }
        mml_path = path.join(project_path, 'project.mml');
        force = args.indexOf('--force' !== -1);
    }
    else {
        help();
        process.exit(1);
    }
    if (!fs.existsSync(mml_path)) {
        console.log('[tilemill_overpass_preprocess] mml file not found at ' + mml_path);
        process.exit(1);
    }
    mml = fs.readFileSync(mml_path, 'utf8');
    mml = typeof mml === 'string' ? JSON.parse(mml) : mml;
    for (var i = 0; i < mml.Layer.length; i++) {
        processLayer(mml.Layer[i], force);
    }
}
if (!module.parent) {
    run();
}
